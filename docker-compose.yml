services:
  # 1. NGINX REVERSE PROXY & LOAD BALANCER
  nginx:
    image: nginx:alpine
    container_name: p2p_reverse_proxy
    ports:
      # Ánh xạ cổng 80 của máy bạn vào cổng 80 của container Nginx
      # Đây là cổng vào duy nhất của toàn hệ thống
      - "80:80"
    volumes:
      # Gắn file cấu hình nginx.conf vào đúng vị trí trong container
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  # 2. BACKEND API SERVICE (ĐÃ ĐƯỢC SCALE)
  backend:
    build: ./backend
    # >>> SỬA: container_name bị loại bỏ khi scaling bằng lệnh scale
    # container_name: p2p_backend_api 
    
    # >>> SỬA: Bỏ port, không cần public port của backend nữa
    # ports:
    #   - "5000:5000"

    # Cấu hình deploy sẽ được dùng bởi lệnh --scale
    deploy:
      replicas: 3
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  # 3. FRONTEND SERVICE (Giữ nguyên)
  frontend:
    build: ./frontend
    container_name: p2p_frontend_app
    # ports:
    #   - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    tty: true
    networks:
      - app-network

  # 4. NOTIFICATION WORKER SERVICE (Giữ nguyên)
  notification-worker:
    build: ./notification-worker
    container_name: p2p_notification_worker
    volumes:
      - ./notification-worker:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./notification-worker/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - app-network

  # 5. DATABASE SERVICE - MongoDB (Giữ nguyên)
  mongodb:
    image: mongo:latest
    container_name: p2p_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # 6. MESSAGE BROKER SERVICE - RabbitMQ (Giữ nguyên)
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: p2p_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local